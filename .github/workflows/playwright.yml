name: Hudl Playwright Project - CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
# Global environment variables
env:
  USER_EMAIL: ${{ secrets.USER_EMAIL }}
  USER_PASSWORD: ${{ secrets.USER_PASSWORD }}
  WRONG_EMAIL: ${{ secrets.WRONG_EMAIL }}
  ENVIRONMENT: production

jobs:
  setup-dependencies:
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache-node.outputs.cache-hit }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Cache Node.js modules
        id: cache-node
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('package-lock.json') }}

  functional:
    needs: setup-dependencies
    runs-on: ubuntu-latest
    env:
      USER_EMAIL: ${{ secrets.USER_EMAIL }}
      USER_PASSWORD: ${{ secrets.USER_PASSWORD }}
      WRONG_EMAIL: ${{ secrets.WRONG_EMAIL }}
    environment: production
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run functional tests (Chrome only)
        run:  npm run functional:ci
      - name: Upload Playwright HTML Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: functional-report-chromium
          path: playwright-report
            test-results

  accessibility:
    needs: setup-dependencies
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' # manual trigger
    environment: production
    strategy:
      matrix:
        browser: [chromium]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run accessibility tests
        run: npm run accessibility:ci

      - name: Upload Playwright HTML Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: accessibility-report
          path: playwright-report

  cross-browser:
    needs: setup-dependencies
    runs-on: ubuntu-latest
    environment: production
    if: github.event_name == 'workflow_dispatch' # manual trigger
    strategy:
      matrix:
        browser: [firefox, webkit]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Download storage state
        uses: actions/download-artifact@v4
        with:
          name: storage-state

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run functional tests on Safari
        run:  npm run functional-safari:ci
      
      - name: Run functional tests on Firefox
        run:  npm run functional-firefox:ci

      - name: Upload Playwright HTML Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: functional-report-${{ matrix.browser }}
          path: playwright-report
