name: Hudl Playwright Project - CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch: # Allows manual trigger for all jobs

env: # Global environment variables
  USER_EMAIL: ${{ secrets.USER_EMAIL }}
  USER_PASSWORD: ${{ secrets.USER_PASSWORD }}
  WRONG_EMAIL: ${{ secrets.WRONG_EMAIL }}
  ENVIRONMENT: production

jobs:
  functional:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache Node.js modules
        id: cache-node
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        if: steps.cache-node.outputs.cache-hit != 'true'
        run: npm ci

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('package-lock.json') }}

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run functional tests (Chrome only)
        run: npm run functional:ci

      - name: Upload Playwright HTML Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: functional-report-chromium
          path: playwright-report

  accessibility:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' # manual trigger only
    steps:
      - uses: actions/checkout@v4

      - name: Cache Node.js modules
        id: cache-node
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        if: steps.cache-node.outputs.cache-hit != 'true'
        run: npm ci

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('package-lock.json') }}

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run accessibility tests
        run: npm run accessibility:ci

      - name: Upload Playwright HTML Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: accessibility-report
          path: playwright-report

  cross-browser:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' # manual trigger only
    strategy:
      matrix:
        browser: [firefox, webkit]
    steps:
      - uses: actions/checkout@v4

      - name: Cache Node.js modules
        id: cache-node
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        if: steps.cache-node.outputs.cache-hit != 'true'
        run: npm ci

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('package-lock.json') }}

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run functional tests
        run: npm run functional-${{ matrix.browser }}:ci

      - name: Upload Playwright HTML Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: functional-report-${{ matrix.browser }}
          path: playwright-report
